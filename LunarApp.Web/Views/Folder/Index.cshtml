@model FolderNotesViewModel

@{
    var title = ViewData["Title"]?.ToString() ?? "Folders in Notebook";
    var notebookId = (Guid)ViewData["NotebookId"]!;
    var parentFolderId = (Guid?)ViewData["ParentFolderId"];
    var parentFolderGuid = (Guid?)ViewData["ParentFolderGuid"];
}

<div class="text-center mb-4 mt-2">
    <h2>@title</h2>
</div>

<hr class="border-bottom" />

<div class="container col-8 d-flex justify-content-start flex-wrap mt-4">
    <!-- Render Folders -->
    @foreach (var folder in Model.Folders)
    {
        <div class="folder-item text-center mx-3 my-3">
            <a asp-controller="Folder" asp-action="Index" asp-route-parentFolderId="@folder.Id" asp-route-notebookId="@folder.NotebookId">
                <img src="/images/folder.png" alt="Folder" />
            </a>
            <div class="mt-2 mb-4 font-weight-bold">@folder.Title</div>
            <div class="d-flex flex-column align-items-center">
                <a asp-controller="Folder" asp-action="Create" asp-route-parentFolderId="@folder.Id" asp-route-notebookId="@folder.NotebookId" class="btn btn-outline-primary mb-2">Add Subfolder</a>
                <a asp-controller="Folder" asp-action="Details" asp-route-parentFolderId="@folder.Id" asp-route-notebookId="@folder.NotebookId" class="btn btn-outline-info mb-2">Details</a>
                <a asp-controller="Folder" asp-action="Edit" asp-route-parentFolderId="@folder.Id" asp-route-notebookId="@folder.NotebookId" class="btn btn-outline-warning mb-2">Edit</a>
                <a asp-controller="Folder" asp-action="Remove" asp-route-folderId="@folder.Id" asp-route-notebookId="@folder.NotebookId" class="btn btn-outline-danger">Remove</a>
            </div>
        </div>
    }

    <!-- Render Notes -->
    @foreach (var note in Model.Notes)
    {
        <div class="note-item text-center mx-3 my-3">
            <a asp-controller="Note" asp-action="Details" asp-route-id="@note.Id">
                <img src="/images/note.png" alt="Note" />
            </a>
            <div class="mt-2 mb-4 font-weight-bold">@note.Title</div>
            <div class="d-flex flex-column align-items-center">
                @* <a asp-controller="Note" asp-action="Edit" asp-route-id="@note.Id" class="btn btn-outline-warning mb-2">Edit</a> *@
                <a asp-controller="Note" asp-action="Remove" asp-route-id="@note.Id" class="btn btn-outline-danger">Remove</a>
            </div>
        </div>
    }
</div>

<div class="d-flex justify-content-center">
    <a asp-controller="Folder" asp-action="Create" asp-route-parentFolderId="@parentFolderId" asp-route-notebookId="@notebookId" class="btn btn-primary">Add New Folder</a>
    <a asp-controller="Note" asp-action="Create" asp-route-parentFolderId="@parentFolderId" asp-route-notebookId="@notebookId" class="btn btn-outline-primary ms-2">Add Note</a>
</div>
<div class="d-flex justify-content-center m-2">
    @if (parentFolderGuid.HasValue)
    {
        <a asp-controller="Folder" asp-action="Index" asp-route-parentFolderId="@parentFolderGuid" asp-route-notebookId="@notebookId" class="btn btn-secondary mb-2">Previous Page</a>
    }
    else if (parentFolderId.HasValue)
    {
        <a asp-controller="Folder" asp-action="Index" asp-route-notebookId="@notebookId" class="btn btn-secondary mb-2">Previous Page</a>
    }
    else if (notebookId != Guid.Empty)
    {
        <a asp-controller="Notebook" asp-action="Index" class="btn btn-secondary mb-2">Previous Page</a>
    }
</div>
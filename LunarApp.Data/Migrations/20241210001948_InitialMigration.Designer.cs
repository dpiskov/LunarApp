// <auto-generated />
using System;
using LunarApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LunarApp.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241210001948_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LunarApp.Data.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cd8ecb79-4f4f-4ca2-9dbb-fb115ddf8c39",
                            Email = "user1@lunarapp.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@LUNARAPP.COM",
                            NormalizedUserName = "USER1",
                            PasswordHash = "AQAAAAIAAYagAAAAEDvWspfyDQPwIwvxtO/8CrstREtRzKTdlzJcJkhtml51PXl881GTfN67CqB3QS+1eA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "78eeaf03-3e3f-4af8-b9f1-ec1e57d70cce",
                            TwoFactorEnabled = false,
                            UserName = "User1"
                        },
                        new
                        {
                            Id = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "002957a8-8c1d-4cfc-a4eb-83f0be798ee8",
                            Email = "user2@lunarapp.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@LUNARAPP.COM",
                            NormalizedUserName = "USER2",
                            PasswordHash = "AQAAAAIAAYagAAAAEPLy5n271IqOjrt3Ho4PRcUmpObK2eX4k9wP9aeMjc3mzMdpjO7dRxtsxRKhlBGYEA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0c43ef90-14e2-4d4e-9020-267605cdcc76",
                            TwoFactorEnabled = false,
                            UserName = "User2"
                        });
                });

            modelBuilder.Entity("LunarApp.Data.Models.Folder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Folder Identifier");

                    b.Property<string>("Description")
                        .HasMaxLength(20000)
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Folder description");

                    b.Property<Guid>("NotebookId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Identifier of a notebook");

                    b.Property<Guid?>("ParentFolderId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Identifier of a parent folder");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Folder title");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("User Identifier");

                    b.HasKey("Id");

                    b.HasIndex("NotebookId");

                    b.HasIndex("ParentFolderId");

                    b.HasIndex("UserId");

                    b.ToTable("Folders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3b678be4-6ba8-47e8-b587-02f5eee57922"),
                            Description = "HTML structure and tags.",
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            Title = "HTML Basics",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("9d2247cc-c784-4b7e-bb46-453264cf771f"),
                            Description = "Styling techniques with CSS.",
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            Title = "CSS Styling",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("8c124fed-1ed5-4de4-9c77-4cb58837b35a"),
                            Description = "JavaScript fundamentals for interactivity.",
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            Title = "JavaScript Essentials",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("bcc661ec-f2dd-4383-8826-b09c4bdf9a91"),
                            Description = "Designing websites for all devices.",
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            Title = "Responsive Design",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("cd319346-1126-42da-b94c-f31027d9d644"),
                            Description = "Exploring popular frameworks like React and Angular.",
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            Title = "Web Development Frameworks",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("aed721b3-fa23-4cd8-bbb9-fae72cb14350"),
                            Description = "Basic structure of an HTML document.",
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            ParentFolderId = new Guid("3b678be4-6ba8-47e8-b587-02f5eee57922"),
                            Title = "HTML Structure",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("696c87a5-3d7c-48dd-a3e2-31e04b226882"),
                            Description = "Common HTML elements and their uses.",
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            ParentFolderId = new Guid("3b678be4-6ba8-47e8-b587-02f5eee57922"),
                            Title = "HTML Elements",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("b51001a1-da4b-416e-84dc-bed2dff1bc58"),
                            Description = "Different layout techniques using CSS.",
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            ParentFolderId = new Guid("9d2247cc-c784-4b7e-bb46-453264cf771f"),
                            Title = "CSS Layouts",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("83c4ea28-5bcd-4aa9-9a4b-d3ad4ea05b65"),
                            Description = "Using CSS animations for dynamic websites.",
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            ParentFolderId = new Guid("9d2247cc-c784-4b7e-bb46-453264cf771f"),
                            Title = "CSS Animations",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("e6bf0b27-f2c6-4185-9b90-fefd5de0d482"),
                            Description = "Understanding variables and data types in JavaScript.",
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            ParentFolderId = new Guid("8c124fed-1ed5-4de4-9c77-4cb58837b35a"),
                            Title = "JavaScript Variables",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("9ac1ef98-5dca-4bcf-bebd-57e8ed06f5a2"),
                            Description = "Creating and using functions in JavaScript.",
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            ParentFolderId = new Guid("8c124fed-1ed5-4de4-9c77-4cb58837b35a"),
                            Title = "JavaScript Functions",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("e0129671-97b9-496e-9bed-1b18e60d6497"),
                            Description = "Using media queries for responsive layouts.",
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            ParentFolderId = new Guid("bcc661ec-f2dd-4383-8826-b09c4bdf9a91"),
                            Title = "Media Queries",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("6f068948-d056-4e3d-834d-9248cd568f0c"),
                            Description = "Building websites with mobile-first principles.",
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            ParentFolderId = new Guid("bcc661ec-f2dd-4383-8826-b09c4bdf9a91"),
                            Title = "Mobile-First Design",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("93040eb1-cf38-4c80-8d58-2ea245fd3508"),
                            Description = "Getting started with React framework.",
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            ParentFolderId = new Guid("cd319346-1126-42da-b94c-f31027d9d644"),
                            Title = "React Basics",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("0c28461f-a4d5-4089-83a2-a37e6a0f7b58"),
                            Description = "Basic concepts and setup of Angular framework.",
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            ParentFolderId = new Guid("cd319346-1126-42da-b94c-f31027d9d644"),
                            Title = "Angular Introduction",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("0733478e-c40e-4230-a18b-cf72a9e9075b"),
                            Description = "Creative ideas for photo shoots.",
                            NotebookId = new Guid("64e76744-982b-4b69-a7b1-97adb2c88939"),
                            Title = "Photo Shoot Ideas",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("3509f2fe-9e83-4588-8d06-4456913835b4"),
                            Description = "Post-processing tips for photo editing.",
                            NotebookId = new Guid("64e76744-982b-4b69-a7b1-97adb2c88939"),
                            Title = "Editing Techniques",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("28380724-0d5b-417b-a4a8-49cbb3728d61"),
                            Description = "Best photography gear for different scenarios.",
                            NotebookId = new Guid("64e76744-982b-4b69-a7b1-97adb2c88939"),
                            Title = "Gear Recommendations",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("d6983107-5575-4ee6-83c2-f41349b00e05"),
                            Description = "Ideas for shooting in outdoor environments.",
                            NotebookId = new Guid("64e76744-982b-4b69-a7b1-97adb2c88939"),
                            ParentFolderId = new Guid("0733478e-c40e-4230-a18b-cf72a9e9075b"),
                            Title = "Outdoor Shoots",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("1818e8a2-ecaf-4b6b-a6af-760256a4719b"),
                            Description = "Creative photo shoot ideas for indoor settings.",
                            NotebookId = new Guid("64e76744-982b-4b69-a7b1-97adb2c88939"),
                            ParentFolderId = new Guid("0733478e-c40e-4230-a18b-cf72a9e9075b"),
                            Title = "Indoor Shoots",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("c7ccc576-e877-4b53-b269-3e4fe37a766d"),
                            Description = "Post-processing tips using Lightroom.",
                            NotebookId = new Guid("64e76744-982b-4b69-a7b1-97adb2c88939"),
                            ParentFolderId = new Guid("3509f2fe-9e83-4588-8d06-4456913835b4"),
                            Title = "Lightroom Techniques",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("e933066b-8c28-4169-adfe-84215032f9ac"),
                            Description = "Advanced editing using Photoshop.",
                            NotebookId = new Guid("64e76744-982b-4b69-a7b1-97adb2c88939"),
                            ParentFolderId = new Guid("3509f2fe-9e83-4588-8d06-4456913835b4"),
                            Title = "Photoshop Editing",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("eb5fdfa5-8262-4c9f-8c78-b8ac8339e23a"),
                            Description = "Recommended cameras for various types of photography.",
                            NotebookId = new Guid("64e76744-982b-4b69-a7b1-97adb2c88939"),
                            ParentFolderId = new Guid("28380724-0d5b-417b-a4a8-49cbb3728d61"),
                            Title = "Cameras",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("55145082-c6e9-4c0f-ac18-7ccbfdf356a6"),
                            Description = "Choosing the right lenses for different shots.",
                            NotebookId = new Guid("64e76744-982b-4b69-a7b1-97adb2c88939"),
                            ParentFolderId = new Guid("28380724-0d5b-417b-a4a8-49cbb3728d61"),
                            Title = "Lenses",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("07683ede-33ca-4ce5-94e4-1aedbd7cce54"),
                            Description = "Techniques for optimizing websites for search engines.",
                            NotebookId = new Guid("b2493638-d170-46e1-be87-2dd8c71bfd7a"),
                            Title = "SEO Strategies",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("7fc38d2c-36e6-4a6a-b581-20e7d5c3b6f3"),
                            Description = "Creating and managing successful social media campaigns.",
                            NotebookId = new Guid("b2493638-d170-46e1-be87-2dd8c71bfd7a"),
                            Title = "Social Media Campaigns",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("8ef17e98-cd0a-4c8a-819e-0faf9845e134"),
                            Description = "Building and managing email marketing lists.",
                            NotebookId = new Guid("b2493638-d170-46e1-be87-2dd8c71bfd7a"),
                            Title = "Email Marketing",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("454281ab-4231-45e5-9c3b-d1fe9d8edcc1"),
                            Description = "Techniques for optimizing individual web pages.",
                            NotebookId = new Guid("b2493638-d170-46e1-be87-2dd8c71bfd7a"),
                            ParentFolderId = new Guid("07683ede-33ca-4ce5-94e4-1aedbd7cce54"),
                            Title = "On-Page SEO",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("443be92e-c6cf-43d9-8b0c-5d53f6496fa3"),
                            Description = "Link building and other off-page SEO techniques.",
                            NotebookId = new Guid("b2493638-d170-46e1-be87-2dd8c71bfd7a"),
                            ParentFolderId = new Guid("07683ede-33ca-4ce5-94e4-1aedbd7cce54"),
                            Title = "Off-Page SEO",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("40cdec01-fc93-48aa-a33b-d8346168ceba"),
                            Description = "Creating effective Facebook ads campaigns.",
                            NotebookId = new Guid("b2493638-d170-46e1-be87-2dd8c71bfd7a"),
                            ParentFolderId = new Guid("7fc38d2c-36e6-4a6a-b581-20e7d5c3b6f3"),
                            Title = "Facebook Ads",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("d73401ea-abcd-4c2c-b32f-25efd67159c9"),
                            Description = "Growing your brand on Instagram with engaging content.",
                            NotebookId = new Guid("b2493638-d170-46e1-be87-2dd8c71bfd7a"),
                            ParentFolderId = new Guid("7fc38d2c-36e6-4a6a-b581-20e7d5c3b6f3"),
                            Title = "Instagram Marketing",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("bc80f3da-b509-4880-b2aa-bd45ce2542b1"),
                            Description = "Techniques for building a quality email list.",
                            NotebookId = new Guid("b2493638-d170-46e1-be87-2dd8c71bfd7a"),
                            ParentFolderId = new Guid("8ef17e98-cd0a-4c8a-819e-0faf9845e134"),
                            Title = "List Building",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("c567ec2e-207d-4b86-89e5-60cacf4012cb"),
                            Description = "Best practices for designing effective email campaigns.",
                            NotebookId = new Guid("b2493638-d170-46e1-be87-2dd8c71bfd7a"),
                            ParentFolderId = new Guid("8ef17e98-cd0a-4c8a-819e-0faf9845e134"),
                            Title = "Email Campaign Design",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("73b21672-7ded-436d-9d21-238eac4834ee"),
                            Description = "Initial sketches and drawing concepts.",
                            NotebookId = new Guid("c7fa8899-8843-4ae0-8d50-b537b7b72ec0"),
                            Title = "Sketches",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("b2d57490-28e6-46de-b945-eaac52c8039e"),
                            Description = "Artworks created with digital tools.",
                            NotebookId = new Guid("c7fa8899-8843-4ae0-8d50-b537b7b72ec0"),
                            Title = "Digital Art",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("bed7f5cd-d3e6-423c-9e7a-33a9c79f0f23"),
                            Description = "Artistic inspirations and reference images.",
                            NotebookId = new Guid("c7fa8899-8843-4ae0-8d50-b537b7b72ec0"),
                            Title = "Inspirations",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("9d6d1496-f9d6-4651-8193-2467ccba9301"),
                            Description = "Initial sketches of landscape designs.",
                            NotebookId = new Guid("c7fa8899-8843-4ae0-8d50-b537b7b72ec0"),
                            ParentFolderId = new Guid("73b21672-7ded-436d-9d21-238eac4834ee"),
                            Title = "Landscape Sketches",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("a7016214-855c-4c6e-90bc-de88d8e9e2da"),
                            Description = "Sketches of characters for various projects.",
                            NotebookId = new Guid("c7fa8899-8843-4ae0-8d50-b537b7b72ec0"),
                            ParentFolderId = new Guid("73b21672-7ded-436d-9d21-238eac4834ee"),
                            Title = "Character Designs",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("1eb4e1a6-701d-49f0-acf1-986462bc70b1"),
                            Description = "Digital portrait artworks.",
                            NotebookId = new Guid("c7fa8899-8843-4ae0-8d50-b537b7b72ec0"),
                            ParentFolderId = new Guid("b2d57490-28e6-46de-b945-eaac52c8039e"),
                            Title = "Portraits",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("7d292463-f14b-4fbe-894a-a23376fea131"),
                            Description = "Abstract digital art creations.",
                            NotebookId = new Guid("c7fa8899-8843-4ae0-8d50-b537b7b72ec0"),
                            ParentFolderId = new Guid("b2d57490-28e6-46de-b945-eaac52c8039e"),
                            Title = "Abstract Art",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("c0f9d00f-d84c-4646-b09b-85c117f4d7ff"),
                            Description = "Photography references for nature-themed artworks.",
                            NotebookId = new Guid("c7fa8899-8843-4ae0-8d50-b537b7b72ec0"),
                            ParentFolderId = new Guid("bed7f5cd-d3e6-423c-9e7a-33a9c79f0f23"),
                            Title = "Nature Photography",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("4805611b-276f-43d8-887b-f32007c413cb"),
                            Description = "Inspirations from fantasy and sci-fi art.",
                            NotebookId = new Guid("c7fa8899-8843-4ae0-8d50-b537b7b72ec0"),
                            ParentFolderId = new Guid("bed7f5cd-d3e6-423c-9e7a-33a9c79f0f23"),
                            Title = "Fantasy Art",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        });
                });

            modelBuilder.Entity("LunarApp.Data.Models.Note", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Note Identifier");

                    b.Property<string>("Body")
                        .HasMaxLength(20000)
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Note body");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasComment("The date the note was created on");

                    b.Property<Guid?>("FolderId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Identifier of a folder");

                    b.Property<DateTime>("LastSaved")
                        .HasColumnType("datetime2")
                        .HasComment("The date the note was last saved on");

                    b.Property<Guid>("NotebookId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Identifier of a notebook");

                    b.Property<Guid?>("ParentFolderId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Identifier of a parent folder");

                    b.Property<Guid?>("TagId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Identifier of a tag");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("Note title");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("User Identifier");

                    b.HasKey("Id");

                    b.HasIndex("FolderId");

                    b.HasIndex("NotebookId");

                    b.HasIndex("ParentFolderId");

                    b.HasIndex("TagId");

                    b.HasIndex("UserId");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5730356e-fdf8-4b8e-8517-a93bdc471f88"),
                            Body = "The basic structure of an HTML document with tags like <html>, <head>, <body>, etc.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(6887),
                            FolderId = new Guid("3b678be4-6ba8-47e8-b587-02f5eee57922"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(6949),
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            TagId = new Guid("9551ba61-9dfd-4570-bbe1-9e84ca3c83eb"),
                            Title = "HTML Structure",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("ae57c752-d0ff-4fa9-a554-d1f3be1da742"),
                            Body = "An overview of commonly used HTML elements like <div>, <h1>, <p>, etc.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(6954),
                            FolderId = new Guid("aed721b3-fa23-4cd8-bbb9-fae72cb14350"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(6955),
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            TagId = new Guid("dcc69dcf-9f29-4eae-8b33-b1ad61f0b949"),
                            Title = "Common HTML Elements",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("5fc3f138-6216-4e79-bd7e-532ee58f9adb"),
                            Body = "An introduction to CSS selectors for styling HTML elements.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(6959),
                            FolderId = new Guid("9d2247cc-c784-4b7e-bb46-453264cf771f"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(6960),
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            TagId = new Guid("9df9c706-a7ca-48de-a9e3-d3aba2d0ab78"),
                            Title = "CSS Selectors",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("82ac74b4-42c4-41e6-8b72-61707fc55b92"),
                            Body = "Understanding the CSS box model with padding, margin, border, and content.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(6964),
                            FolderId = new Guid("b51001a1-da4b-416e-84dc-bed2dff1bc58"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(6965),
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            TagId = new Guid("fe656a37-42fc-4d91-aa78-4bc7ac98e2b0"),
                            Title = "Box Model",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("d53f3f28-816f-4f10-810a-ea1be7da24b8"),
                            Body = "Understanding the different types of variables in JavaScript, including var, let, and const.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(6967),
                            FolderId = new Guid("8c124fed-1ed5-4de4-9c77-4cb58837b35a"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(6969),
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            TagId = new Guid("dcc69dcf-9f29-4eae-8b33-b1ad61f0b949"),
                            Title = "JavaScript Variables",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("ed841837-13d5-4fb1-a312-7f2312720cd5"),
                            Body = "Different types of loops in JavaScript like for, while, and do-while.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(6973),
                            FolderId = new Guid("e6bf0b27-f2c6-4185-9b90-fefd5de0d482"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(6974),
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            TagId = new Guid("da3502a0-5d57-4d40-8198-c3e36396dacc"),
                            Title = "JavaScript Loops",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("3d407ad9-deb5-4ce8-82c6-3da41e705b88"),
                            Body = "An introduction to CSS Grid layout system for building responsive designs.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(6977),
                            FolderId = new Guid("bcc661ec-f2dd-4383-8826-b09c4bdf9a91"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(6978),
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            TagId = new Guid("9df9c706-a7ca-48de-a9e3-d3aba2d0ab78"),
                            Title = "CSS Grid",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("7bdc3d85-7c27-430b-af9c-9eb3cbff3805"),
                            Body = "How to use Flexbox for flexible and responsive layouts.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7068),
                            FolderId = new Guid("e0129671-97b9-496e-9bed-1b18e60d6497"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7069),
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            TagId = new Guid("9551ba61-9dfd-4570-bbe1-9e84ca3c83eb"),
                            Title = "Flexbox",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("5e28a104-6632-451b-8578-1397114f6afc"),
                            Body = "Steps for setting up React using Create React App.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7072),
                            FolderId = new Guid("cd319346-1126-42da-b94c-f31027d9d644"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7073),
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            TagId = new Guid("fe656a37-42fc-4d91-aa78-4bc7ac98e2b0"),
                            Title = "React Setup",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("5f5d6ec1-68d0-4218-914f-731761647906"),
                            Body = "Basic Angular setup and introduction to components, services, and modules.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7077),
                            FolderId = new Guid("93040eb1-cf38-4c80-8d58-2ea245fd3508"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7078),
                            NotebookId = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            TagId = new Guid("da3502a0-5d57-4d40-8198-c3e36396dacc"),
                            Title = "Angular Basics",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("12a1a380-c3a2-47c8-bd03-6de4dd2f750b"),
                            Body = "Ideas for capturing the beauty of nature through the lens.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7104),
                            FolderId = new Guid("0733478e-c40e-4230-a18b-cf72a9e9075b"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7105),
                            NotebookId = new Guid("64e76744-982b-4b69-a7b1-97adb2c88939"),
                            TagId = new Guid("9551ba61-9dfd-4570-bbe1-9e84ca3c83eb"),
                            Title = "Nature Photography",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("3d38093a-d616-448a-8efb-0a30bb74dd44"),
                            Body = "Tips for using studio lighting to enhance portraits.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7109),
                            FolderId = new Guid("d6983107-5575-4ee6-83c2-f41349b00e05"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7110),
                            NotebookId = new Guid("64e76744-982b-4b69-a7b1-97adb2c88939"),
                            TagId = new Guid("da3502a0-5d57-4d40-8198-c3e36396dacc"),
                            Title = "Studio Lighting",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("74e383c9-4ca9-4ffe-85bd-c33afae68772"),
                            Body = "Techniques for enhancing colors in Lightroom.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7113),
                            FolderId = new Guid("3509f2fe-9e83-4588-8d06-4456913835b4"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7114),
                            NotebookId = new Guid("64e76744-982b-4b69-a7b1-97adb2c88939"),
                            TagId = new Guid("dcc69dcf-9f29-4eae-8b33-b1ad61f0b949"),
                            Title = "Color Grading in Lightroom",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("e1b1acff-a86f-49a2-902b-c0d3b9fda152"),
                            Body = "Step-by-step guide to retouching portraits in Photoshop.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7117),
                            FolderId = new Guid("c7ccc576-e877-4b53-b269-3e4fe37a766d"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7118),
                            NotebookId = new Guid("64e76744-982b-4b69-a7b1-97adb2c88939"),
                            TagId = new Guid("9df9c706-a7ca-48de-a9e3-d3aba2d0ab78"),
                            Title = "Retouching in Photoshop",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("f46dca2c-ff7f-450f-a7a3-2b4b4bfaa1af"),
                            Body = "A list of the best DSLR cameras for photography novices.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7121),
                            FolderId = new Guid("28380724-0d5b-417b-a4a8-49cbb3728d61"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7122),
                            NotebookId = new Guid("64e76744-982b-4b69-a7b1-97adb2c88939"),
                            TagId = new Guid("fe656a37-42fc-4d91-aa78-4bc7ac98e2b0"),
                            Title = "Best DSLR Cameras for Beginners",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("cbe3825d-182c-469c-92f4-cb070bbbf71e"),
                            Body = "A guide to selecting the best lenses for portrait shots.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7126),
                            FolderId = new Guid("eb5fdfa5-8262-4c9f-8c78-b8ac8339e23a"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7127),
                            NotebookId = new Guid("64e76744-982b-4b69-a7b1-97adb2c88939"),
                            TagId = new Guid("fe656a37-42fc-4d91-aa78-4bc7ac98e2b0"),
                            Title = "Choosing Lenses for Portrait Photography",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("03071a78-bb60-463d-8720-39e196605d1a"),
                            Body = "How to find the right keywords for SEO.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7151),
                            FolderId = new Guid("07683ede-33ca-4ce5-94e4-1aedbd7cce54"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7153),
                            NotebookId = new Guid("b2493638-d170-46e1-be87-2dd8c71bfd7a"),
                            TagId = new Guid("be40ffb7-35ae-4da6-b2bc-91e2ae6f0ab2"),
                            Title = "Keyword Research",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("526de7eb-ae57-45c5-9b12-a9b361f7bc89"),
                            Body = "Techniques for optimizing your website for Google's algorithms.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7157),
                            FolderId = new Guid("454281ab-4231-45e5-9c3b-d1fe9d8edcc1"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7158),
                            NotebookId = new Guid("b2493638-d170-46e1-be87-2dd8c71bfd7a"),
                            TagId = new Guid("558a346e-01fc-43c3-9d5f-c419f632febf"),
                            Title = "Optimizing for Google",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("f439d93a-cc5a-464b-9f2e-aff1181ea300"),
                            Body = "Step-by-step guide to creating effective Facebook ads.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7161),
                            FolderId = new Guid("7fc38d2c-36e6-4a6a-b581-20e7d5c3b6f3"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7162),
                            NotebookId = new Guid("b2493638-d170-46e1-be87-2dd8c71bfd7a"),
                            TagId = new Guid("4c710bd8-a7a9-47a7-acd5-9a59fb25ac71"),
                            Title = "Creating Facebook Ads",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("9f7220e1-a76d-49be-8ade-a1b993538873"),
                            Body = "How to create content that engages your Instagram audience.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7165),
                            FolderId = new Guid("40cdec01-fc93-48aa-a33b-d8346168ceba"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7166),
                            NotebookId = new Guid("b2493638-d170-46e1-be87-2dd8c71bfd7a"),
                            TagId = new Guid("810387bf-3876-46c9-a0c8-4bef0f905003"),
                            Title = "Engaging Instagram Content",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("37a6cee4-d0db-4211-a3b4-140114c6cbc5"),
                            Body = "Tips for growing a list of engaged email subscribers.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7169),
                            FolderId = new Guid("8ef17e98-cd0a-4c8a-819e-0faf9845e134"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7170),
                            NotebookId = new Guid("b2493638-d170-46e1-be87-2dd8c71bfd7a"),
                            TagId = new Guid("d3dfd6da-8d66-448d-b37a-84912f51988e"),
                            Title = "Building an Email List",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("43ce3234-72da-4ae1-9bdd-845e1026b82f"),
                            Body = "Creating email campaigns that convert subscribers into customers.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7174),
                            FolderId = new Guid("bc80f3da-b509-4880-b2aa-bd45ce2542b1"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7175),
                            NotebookId = new Guid("b2493638-d170-46e1-be87-2dd8c71bfd7a"),
                            TagId = new Guid("be40ffb7-35ae-4da6-b2bc-91e2ae6f0ab2"),
                            Title = "Effective Email Campaigns",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("103954f0-57d1-466f-bb08-6ba7f2194d85"),
                            Body = "Sketch of a mountain landscape with a river running through it.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7274),
                            FolderId = new Guid("73b21672-7ded-436d-9d21-238eac4834ee"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7275),
                            NotebookId = new Guid("c7fa8899-8843-4ae0-8d50-b537b7b72ec0"),
                            TagId = new Guid("558a346e-01fc-43c3-9d5f-c419f632febf"),
                            Title = "Mountain Landscape",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("d1913ba3-ca3b-4720-96b2-e44879b00e2a"),
                            Body = "Initial sketch of a fantasy character with magical abilities.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7280),
                            FolderId = new Guid("9d6d1496-f9d6-4651-8193-2467ccba9301"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7281),
                            NotebookId = new Guid("c7fa8899-8843-4ae0-8d50-b537b7b72ec0"),
                            TagId = new Guid("4c710bd8-a7a9-47a7-acd5-9a59fb25ac71"),
                            Title = "Fantasy Character",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("b9946f2b-405f-460a-91f6-113a8237edb3"),
                            Body = "A digital painting of a woman with flowing hair.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7284),
                            FolderId = new Guid("b2d57490-28e6-46de-b945-eaac52c8039e"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7285),
                            NotebookId = new Guid("c7fa8899-8843-4ae0-8d50-b537b7b72ec0"),
                            TagId = new Guid("810387bf-3876-46c9-a0c8-4bef0f905003"),
                            Title = "Digital Portrait",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("06c887d8-974f-4ca3-9593-e5906fc4b8f0"),
                            Body = "Creating abstract geometric shapes using digital tools.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7288),
                            FolderId = new Guid("1eb4e1a6-701d-49f0-acf1-986462bc70b1"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7289),
                            NotebookId = new Guid("c7fa8899-8843-4ae0-8d50-b537b7b72ec0"),
                            TagId = new Guid("d3dfd6da-8d66-448d-b37a-84912f51988e"),
                            Title = "Abstract Geometric Art",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("fe8e7876-8b2a-4c69-b2bd-bfeabb0d6d41"),
                            Body = "Images of forests, mountains, and rivers to inspire landscape art.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7292),
                            FolderId = new Guid("bed7f5cd-d3e6-423c-9e7a-33a9c79f0f23"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7293),
                            NotebookId = new Guid("c7fa8899-8843-4ae0-8d50-b537b7b72ec0"),
                            TagId = new Guid("be40ffb7-35ae-4da6-b2bc-91e2ae6f0ab2"),
                            Title = "Nature Art References",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("21339dbb-af0e-48f6-a2ca-617d49934d17"),
                            Body = "Inspirations from sci-fi concept art for a futuristic city.",
                            DateCreated = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7297),
                            FolderId = new Guid("c0f9d00f-d84c-4646-b09b-85c117f4d7ff"),
                            LastSaved = new DateTime(2024, 12, 10, 2, 19, 47, 562, DateTimeKind.Local).AddTicks(7298),
                            NotebookId = new Guid("c7fa8899-8843-4ae0-8d50-b537b7b72ec0"),
                            TagId = new Guid("558a346e-01fc-43c3-9d5f-c419f632febf"),
                            Title = "Sci-Fi Concept Art",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        });
                });

            modelBuilder.Entity("LunarApp.Data.Models.Notebook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Notebook Identifier");

                    b.Property<string>("Description")
                        .HasMaxLength(20000)
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Notebook description");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Notebook title");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("User Identifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notebooks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bba8f1bb-cd67-414c-951f-c4fa02069a33"),
                            Description = "Tips and tricks for building websites.",
                            Title = "Web Development",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("64e76744-982b-4b69-a7b1-97adb2c88939"),
                            Description = "Ideas for photo shoots, editing techniques, and gear recommendations.",
                            Title = "Photography",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("b2493638-d170-46e1-be87-2dd8c71bfd7a"),
                            Description = "Strategies for online marketing.",
                            Title = "Digital Marketing",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("c7fa8899-8843-4ae0-8d50-b537b7b72ec0"),
                            Description = "Artworks, sketches, and inspirations.",
                            Title = "Art Portfolio",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        });
                });

            modelBuilder.Entity("LunarApp.Data.Models.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Tag Identifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasComment("Tag name");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("User Identifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9551ba61-9dfd-4570-bbe1-9e84ca3c83eb"),
                            Name = "Important",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("da3502a0-5d57-4d40-8198-c3e36396dacc"),
                            Name = "Urgent",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("dcc69dcf-9f29-4eae-8b33-b1ad61f0b949"),
                            Name = "To-Do",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("9df9c706-a7ca-48de-a9e3-d3aba2d0ab78"),
                            Name = "Review",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("fe656a37-42fc-4d91-aa78-4bc7ac98e2b0"),
                            Name = "Completed",
                            UserId = new Guid("e3173a9a-c123-4cca-a93f-7fad5181bf42")
                        },
                        new
                        {
                            Id = new Guid("be40ffb7-35ae-4da6-b2bc-91e2ae6f0ab2"),
                            Name = "Completed",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("558a346e-01fc-43c3-9d5f-c419f632febf"),
                            Name = "In Progress",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("4c710bd8-a7a9-47a7-acd5-9a59fb25ac71"),
                            Name = "Backlog",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("810387bf-3876-46c9-a0c8-4bef0f905003"),
                            Name = "Priority",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        },
                        new
                        {
                            Id = new Guid("d3dfd6da-8d66-448d-b37a-84912f51988e"),
                            Name = "Ideas",
                            UserId = new Guid("3a7c43e8-a082-43fc-8c3b-199fea251913")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("LunarApp.Data.Models.Folder", b =>
                {
                    b.HasOne("LunarApp.Data.Models.Notebook", "Notebook")
                        .WithMany("Folders")
                        .HasForeignKey("NotebookId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LunarApp.Data.Models.Folder", "ParentFolder")
                        .WithMany("ChildrenFolders")
                        .HasForeignKey("ParentFolderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LunarApp.Data.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notebook");

                    b.Navigation("ParentFolder");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LunarApp.Data.Models.Note", b =>
                {
                    b.HasOne("LunarApp.Data.Models.Folder", "Folder")
                        .WithMany("Notes")
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LunarApp.Data.Models.Notebook", "Notebook")
                        .WithMany("Notes")
                        .HasForeignKey("NotebookId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LunarApp.Data.Models.Folder", "ParentFolder")
                        .WithMany()
                        .HasForeignKey("ParentFolderId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LunarApp.Data.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LunarApp.Data.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Folder");

                    b.Navigation("Notebook");

                    b.Navigation("ParentFolder");

                    b.Navigation("Tag");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LunarApp.Data.Models.Notebook", b =>
                {
                    b.HasOne("LunarApp.Data.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LunarApp.Data.Models.Tag", b =>
                {
                    b.HasOne("LunarApp.Data.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("LunarApp.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("LunarApp.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LunarApp.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("LunarApp.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LunarApp.Data.Models.Folder", b =>
                {
                    b.Navigation("ChildrenFolders");

                    b.Navigation("Notes");
                });

            modelBuilder.Entity("LunarApp.Data.Models.Notebook", b =>
                {
                    b.Navigation("Folders");

                    b.Navigation("Notes");
                });
#pragma warning restore 612, 618
        }
    }
}
